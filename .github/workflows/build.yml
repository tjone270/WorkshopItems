name: Build and Test

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_PATH: 'WorkshopItems.csproj'

jobs:
  build:
    name: Build and Test
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}

    - name: Build
      run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore

    - name: Run tests
      run: dotnet test --no-restore --verbosity normal
      continue-on-error: true # Since there might not be tests yet

    # Build artifacts for different deployment scenarios
    - name: Publish Framework-Dependent
      run: dotnet publish ${{ env.PROJECT_PATH }} -c Release -r win-x64 --self-contained false -o ./publish/framework-dependent

    - name: Publish Self-Contained
      run: dotnet publish ${{ env.PROJECT_PATH }} -c Release -r win-x64 --self-contained true -o ./publish/self-contained

    - name: Upload Framework-Dependent Artifact
      uses: actions/upload-artifact@v4
      with:
        name: WorkshopItems-FrameworkDependent-${{ github.sha }}
        path: ./publish/framework-dependent/

    - name: Upload Self-Contained Artifact
      uses: actions/upload-artifact@v4
      with:
        name: WorkshopItems-SelfContained-${{ github.sha }}
        path: ./publish/self-contained/

  code-quality:
    name: Code Quality Check
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}

    - name: Check formatting
      run: dotnet format ${{ env.PROJECT_PATH }} --verify-no-changes --verbosity diagnostic
      continue-on-error: true

    - name: Run code analysis
      run: dotnet build ${{ env.PROJECT_PATH }} /p:AnalysisMode=AllEnabledByDefault /p:TreatWarningsAsErrors=false